plugins {
    id 'com.android.application'
    id 'org.jetbrains.kotlin.android'
    id 'com.google.devtools.ksp'
    id 'kotlin-kapt'
}

android {
    namespace 'com.wladkoshelev.metronome'
    compileSdk 34
    defaultConfig {
        applicationId "com.wladkoshelev.metronome"
        minSdk 24
        targetSdk 34
        versionCode 1
        versionName "0.0.1"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        vectorDrawables {
            useSupportLibrary true
        }

        kapt {
            arguments {
                // автомиграция для Рума (экспорт схемы таблицы)
                arg("room.schemaLocation", "$projectDir/schemas")
            }
        }
    }

    // включение доступности BuildConfig
    buildFeatures {
        buildConfig true
    }

    // возможность переключать локали для AAB
    bundle {
        language {
            enableSplit = false
        }
    }

    signingConfigs {
        debug {
            def keystorePropertiesFile = rootProject.file("app/Metronome.properties")
            def keystoreProperties = new Properties()
            keystoreProperties.load(new FileInputStream(keystorePropertiesFile))
            keyAlias keystoreProperties['keyAlias']
            keyPassword keystoreProperties['keyPassword']
            storeFile file(keystoreProperties['storeFile'])
            storePassword keystoreProperties['storePassword']
        }
    }

    buildTypes {
        release {
            minifyEnabled true
            shrinkResources true
            signingConfig signingConfigs.debug
            resValue "string", "app_name", "@string/app_name_release"
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
        debug {
            initWith(release)
            debuggable true
            minifyEnabled false
            shrinkResources false
            resValue "string", "app_name", "@string/app_name_debug"
        }
        android.applicationVariants.all { variant ->
            variant.outputs.all {
                outputFileName = "Metronome_${versionName}_${variant.buildType.name}.apk"
            }
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_17
        targetCompatibility JavaVersion.VERSION_17
    }
    kotlinOptions {
        jvmTarget = '17'
    }
    buildFeatures {
        compose true
    }
    composeOptions {
        kotlinCompilerExtensionVersion '1.4.3'
    }
    packaging {
        resources {
            excludes += '/META-INF/{AL2.0,LGPL2.1}'
        }
    }
}

dependencies {
    implementation 'androidx.core:core-ktx:1.9.0'
    implementation 'androidx.lifecycle:lifecycle-runtime-ktx:2.8.2'
    implementation 'androidx.activity:activity-compose:1.9.0'
    implementation platform('androidx.compose:compose-bom:2024.06.00')
    implementation 'androidx.compose.ui:ui'
    implementation 'androidx.compose.ui:ui-graphics'
    implementation 'androidx.compose.ui:ui-tooling-preview'
    implementation 'androidx.compose.material3:material3'

    testImplementation 'junit:junit:4.13.2'

    androidTestImplementation 'androidx.test.ext:junit:1.2.1'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.6.1'
    androidTestImplementation platform('androidx.compose:compose-bom:2024.06.00')
    androidTestImplementation 'androidx.compose.ui:ui-test-junit4'

    debugImplementation 'androidx.compose.ui:ui-tooling'
    debugImplementation 'androidx.compose.ui:ui-test-manifest'
    //..................

    // Compose Collect With Lifecycle
    implementation("androidx.lifecycle:lifecycle-runtime-compose:2.8.3")

    // LeakCanary
    debugImplementation 'com.squareup.leakcanary:leakcanary-android:2.14'

    // Koin
    implementation(platform("io.insert-koin:koin-bom:3.5.6"))
    implementation("io.insert-koin:koin-core")
    implementation("io.insert-koin:koin-android")
    implementation("io.insert-koin:koin-androidx-compose")

    // Compose Navigation Raamcosta
    def raamcostaVersion = "1.10.2"
    implementation("io.github.raamcosta.compose-destinations:core:$raamcostaVersion")
    ksp("io.github.raamcosta.compose-destinations:ksp:$raamcostaVersion")


    // Room
    def roomVersion = "2.6.1"
    implementation("androidx.room:room-runtime:$roomVersion")
    annotationProcessor "androidx.room:room-compiler:$roomVersion"
    kapt("androidx.room:room-compiler:$roomVersion")
    implementation("androidx.room:room-ktx:$roomVersion")


    // Gson
    implementation 'com.google.code.gson:gson:2.9.0'


    // LazyColumn Reorder v.2.2.0 for kotlin 1.8. v.2.3.0 for kotlin 2.0
//    implementation("org.burnoutcrew.composereorderable:reorderable:0.9.6")
    implementation("sh.calvin.reorderable:reorderable:2.2.0")

}